// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User information model for mobile number login
model UserInfo {
  id           String   @id @default(uuid())
  mobileNumber String   @unique @map("mobile_number")
  password     String
  name         String?
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("user_info")
}

// User USDT balance model
model UserBalance {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  usdtBalance Decimal  @default(0) @db.Decimal(18, 8) @map("usdt_balance")
  gasBalance Decimal  @default(0) @db.Decimal(18, 8) @map("gas_balance")
  investBalance Decimal  @default(0) @db.Decimal(18, 8) @map("invest_balance")
  profit Decimal  @default(0) @db.Decimal(18, 8) @map("profit")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("user_balance")
}

// Enum for order types
enum OrderType {
  MARKET
  LIMIT
  STOP_LIMIT
  STOP_MARKET
  TRAILING_STOP
}

// Enum for order sides
enum OrderSide {
  BUY
  SELL
}

// Enum for order status
enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
  FAILED
  PARTIAL
}

// Enum for exchanges
enum ExchangeName {
  OKX
  BINANCE
  BYBIT
  COINBASE
}

// Trading history model for tracking trading activities
model TradingHistory {
  id            String       @id @default(uuid())
  userId        String       @map("user_id")
  symbol        String       // Trading pair symbol (e.g., BTC-USDT)
  orderType     OrderType    @map("order_type")
  side          OrderSide
  price         Decimal      @db.Decimal(18, 8)
  amount        Decimal      @db.Decimal(18, 8)
  fee           Decimal      @db.Decimal(18, 8)
  totalValue    Decimal      @map("total_value") @db.Decimal(18, 8)
  status        OrderStatus
  exchangeId    String?      @map("exchange_id") // ID from the exchange
  exchangeName  ExchangeName @map("exchange_name")
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  completedAt   DateTime?    @map("completed_at")

  @@map("trading_history")
}
